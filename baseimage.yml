---
- name: Ansible Provision
  hosts: all
  tasks:
  - name: general settings
    block:
    - name: install tzdata
      apt:
        name:
          - tzdata
          - ca-certificates
        install_recommends: no
        state: present
    - name: add universe repository
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe
        state: present
        update_cache: no
    - name: update repository cache
      apt:
        update_cache: yes
    - debug: var=timezone
    - name: change timezone setting
      file:
        src: /usr/share/zoneinfo/{{ timezone }}
        dest: /etc/localtime
        state: link
        force: yes
    - name: install container-dependencies
      apt:
        name:
          - runit
          - ldnsutils
          - gosu
        install_recommends: no
        state: present
    - name: install build-dependencies
      apt:
        name:
          - build-essential
          - automake
          - autoconf
          - libtool
          - git
          - tar
          - golang
        install_recommends: no
        state: present
    - name: install unbound-dependencies
      apt:
        name:
          - libevent-dev
          - libfstrm-dev
          - protobuf-c-compiler
          - libprotobuf-dev
          - libprotobuf-c-dev
          - libssl-dev
          - libexpat1-dev
          - libldns-dev
          - libgcc1
          - dns-root-data
          - swig
          - openssl
        install_recommends: no
        state: present
  - name: install unbound
    block:
    - debug: var=unbound_version
    - name: create unbound group
      group:
        name: "{{ unbound_user }}"
        system: yes
        state: present
    - name: create unbound user
      user:
        name: "{{ unbound_user }}"
        comment: "unbound server"
        group: "{{ unbound_user }}"
        system: yes
        shell: /sbin/nologin
    - name: create unbound directory
      file:
        path: "{{ unbound_root }}"
        state: directory
    - name: download unbound tarball
      get_url:
        url: "https://www.nlnetlabs.nl/downloads/unbound/unbound-{{ unbound_version }}.tar.gz"
        dest: "{{ unbound_root }}/unbound-{{ unbound_version }}.tar.gz"
    - name: extract unbound tarball
      unarchive:
        src: "{{ unbound_root }}/unbound-{{ unbound_version }}.tar.gz"
        dest: "{{ unbound_root }}/"
        copy: no
    - name: configure unbound
      shell: |
        ./configure \
        --prefix={{ unbound_root }} \
        --with-username={{ unbound_user }} \
        --with-run-dir="" \
        --with-pidfile="" \
        --localstatedir=/var \
        --with-rootkey-file=/usr/share/dns/root.key \
        --with-libevent \
        --with-pthreads \
        --disable-static \
        --disable-rpath \
        --with-ssl \
        --without-pythonmodule \
        --without-pyunbound \
        --disable-systemd \
        --enable-dnstap
      args:
        chdir: "{{ unbound_root }}/unbound-{{ unbound_version }}/"
    - name: build unbound
      make:
        chdir: "{{ unbound_root }}/unbound-{{ unbound_version }}/"
    - name: install unbound
      make:
        chdir: "{{ unbound_root }}/unbound-{{ unbound_version }}/"
        target: install
    - name: build golang-dnstap
      shell: |
        go get -u -v github.com/dnstap/golang-dnstap
        go get -u -v github.com/dnstap/golang-dnstap/dnstap
        go get -u -v github.com/farsightsec/golang-framestream
      environment:
        GOPATH: "{{ unbound_root }}"
    - name: remove source files
      file:
        path: "{{ item }}"
        force: yes
        state: absent
      with_items:
        - "{{ unbound_root }}/unbound-{{ unbound_version }}"
        - "{{ unbound_root }}/unbound-{{ unbound_version }}.tar.gz"
        - "{{ unbound_root }}/src"
        - "{{ unbound_root }}/pkg"
    - name: create device directory
      file:
        path: "{{ unbound_root }}/dev" 
        state: directory
    - name: make devices
      shell: |
        mknod {{ unbound_root }}/dev/random c 1 8 \
        && mknod {{ unbound_root }}/dev/log c 1 3
    - name: remove build-dependencies package
      apt:
        name:
          - build-essential
          - automake
          - autoconf
          - libtool
          - git
          - golang
          - xz-utils
          - bzip2
          - protobuf-c-compiler
          - swig
        autoremove: yes
        autoclean: yes
        purge: yes
        state: absent
    - name: clean unbound directory
      file:
        path: "{{ unbound_root }}/share"
        state: absent
        force: true
    - name: create unbound directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ unbound_user }}"
        group: "{{ unbound_user }}"
      with_items:
        - "{{ unbound_root }}/var/run"
        - "{{ unbound_root }}/var/unbound"
